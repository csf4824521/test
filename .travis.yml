#dist: xenial
#指定语言为cpp
language: cpp
#需要sudu权限
sudo: required
#编译器为gcc
compiler: gcc
#环境变量
#env: QT_BASE="512"

matrix:
  include:
    - os: linux
      dist: Trusty
      env: 
        targetFile=github
        releaseName=Github_ubuntu_xenial_x64
      cache:
        bundler: true
        apt: true
        directories:
            - /opt/qt551/
    - os: osx
      osx_image: xcode10.2
      env: 
        targetFile=github
        releaseName=Github_macos10-14_xcode10-2.dmg
      cache:
        bundler: true
        directories:
            - /usr/local/Cellar/qt/5.5.1/
    - os: osx
      osx_image: xcode9.4
      env: 
        targetFile=github
        releaseName=Github_macos10-13_xcode9-4.dmg
      cache:
        bundler: true
        directories:
            - /usr/local/Cellar/qt/5.5.1/
  
#缓存

# 注意上面的缓存,指定qt安装路径，可以避免重复安装

#组
group: deprecated-2019Q1

# travis默认系统为ubuntu，并提供一些基础的命令。但是没有安装Qt，需要通过ubuntu源进行安装。
# 关于ubuntu源 在这个网站上查看细节 https://launchpad.net/~beineri/+archive/ubuntu/
# 当然也可以通过qt安装包 +一些命令的方式来安装，这里以源的方式为主。
#安装前的设置
#添加qt5.5.1的源
before_install:
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; brew install qt; fi 
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo add-apt-repository ppa:beineri/opt-qt551-trusty -y; sudo apt-get update -qq; sudo apt-get install -y libglew-dev libglfw3-dev; sudo apt-get install -y qt55-meta-minimal; fi
# 单独安装qt3d模块的示例
#    - sudo apt-get install -y qt553d

before_script:
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then source /opt/qt55/bin/qt55-env.sh; fi
script:
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then source /opt/qt55/bin/qt55-env.sh; qmake ; make ; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then /usr/local/Cellar/qt/5.5.1/bin/qmake ; make ; fi
before_deploy:
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then /usr/local/Cellar/qt/5.5.1/bin/macdeployqt bin/${targetFile}.app -qmldir=/usr/local/Cellar/qt/5.5.1/qml -verbose=1 -dmg ; mv bin/${targetFile}.dmg bin/${releaseName} ; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then mv bin/${targetFile} bin/${releaseName} ; fi
deploy:              # 部署
  provider: releases # 部署到 GitHub Release，除此之外，Travis CI 还支持发布到 fir.im、AWS、Google App Engine 等
  api_key: $GITHUB_OAUTH_TOKEN # 填写 GitHub 的 token （Settings -> Personal access tokens -> Generate new token）
  file: bin/${releaseName}   # 部署文件路径
  skip_cleanup: true     # 设置为 true 以跳过清理,不然 apk 文件就会被清理
  on:     # 发布时机           
    tags: true       # tags 设置为 true 表示只有在有 tag 的情况下才部署   
notifications:
    email: false

